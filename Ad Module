HIVE SDK 외부라이브러리 적용 가이드

개요
HIVE SDK는 종속성이 있는 외부라이브러리를 포함하여 배포하고 있습니다.
다른 외부 플러그인과 같은 라이브러리를 사용하는 경우 버전 충돌이 발생하여 정상적인 빌드가 수행되지 않을 수 있습니다.
HIVE SDK에서 사용하는 외부라이브러리의 일부를 Android의 경우 Gradle을, iOS의 경우 CocoaPods을 통해 필요한 라이브러리 설치를 하도록 가이드를 제공합니다.
Gradle과 CocoaPods을 통해 최신버전이 없거나 별도의 관리가 필요한 라이브러리의 경우 이전과 같이 배포버전에 포함하여 배포를 진행합니다.

개발자 환경
2020년 4월 10일 기준
가이드 작성을 위해 설치된 운영체제와 Unity 3D, Xcode 버전은 다음과 같습니다.
OS : MAC OS Mojave 10.14.6
Unity 3D : 2018.4.17f1
Xcode : 11.3.1 (11C504)


Unity를 사용하는 경우
HIVE SDK의 UnityPackage 배포버전은 External-Dependency-Manager for Unity( 구 : Google-Play-Service-Resolver, 이하 EDM4U) 패키지를 포함하여 배포하고 있습니다. EDM4U Unity빌드 환경에서 Google이 배포하는 PlaySerivce라이브러리의 쉬운 적용을 위해 개발이 되었고, 현재는 Google이 배포하는 라이브러리 뿐만 아니라 Gradle과 CocoaPods을 통해 배포되는 라이브러리도 관리할 수 있도록 개선이 되었습니다.
HIVE SDK 개별모듈은 EDM4U 패키지를 별도의 UnityPackage로 배포됩니다.
HIVE SDK는 EDM4U 설정을 통해 빌드 수행시 자동으로 필요한 라이브러리를 설치 및 배포에 포함하도록 구성하였습니다. 

EDM4U가 동작하기 위한 빌드 환경이 구축되지 않은 경우 환경을 구축할 필요가 있습니다. EDM4U에서  제공하는 GUI를 통해 쉽게 가능하며, CLI(Command Line Interface, aka Bash-Shell)를 통해서도 가능합니다.

유니티->Asset->External Dependency Manager -> iOS Resolver -> Install Cocoapods

유니티 -> Asset -> External Dependency Manager -> Android Resolver -> Settings

Default설정으로 빨간박스 안의 항목들은 필수 체크 항목입니다.

CocoaPods을 Bash-Shell에서 커맨드 라인으로 설치하는 방법입니다.
> [sudo] gem install cocoapods
>$ gem install cocoapods
Successfully installed cocoapods-1.9.1
Parsing documentation for cocoapods-1.9.1
Done installing documentation for cocoapods after 3 seconds
1 gem installed



Gradle은 Android SDK 및 Androids Studio가 설치되어져 있다면 별도의 설정이 필요하지 않습니다.
Android SDK 및 Android Studio 설치 바로가기 -> 링크

CocoaPods을 통해 iOS의 외부라이브러리를 제공받는 경우 기존의 xcodeproj를 xcworkspace로 변경하여 제공합니다. xcworkspace를 통한 빌드를 수행할 수 없는 경우에는 GUI를 통해 설정을 변경하면 해당PC의 Unity에서 수행되는 CocoaPods 적용 방식이 변경됩니다.

유니티->Asset->External Dependency Manager -> iOS Resolver -> Settings

xcworkspace -> xcodeproj 변경

Unity가 아닌 경우
HIVE SDK를 Unity가 아닌 개발환경에서 사용하는 경우 Gradle과 CocoaPods설정을 통해 외부라이브러리를 관리할 수 있습니다.
HIVE SDK Sample Project에 포함된 build.gradle 파일의 일부입니다.
dependencies {
   implementation fileTree(include: ['*.jar'], dir: 'libs')
   implementation fileTree(include: ['*.aar'], dir: 'libs')
 
   def multidex_version = "2.0.1"
   implementation "androidx.multidex:multidex:$multidex_version"
 
   // FCM설정
   implementation 'com.google.firebase:firebase-core:16.0.0'
   implementation 'com.google.firebase:firebase-iid:16.0.0'
   implementation 'com.google.firebase:firebase-messaging:17.0.0'
 
   // Facebook Dependency
   implementation 'com.android.support:appcompat-v7:26.1.0'
   implementation 'com.android.support:cardview-v7:26.1.0'
   implementation 'com.android.support:customtabs:26.1.0'
   implementation 'com.android.support:support-annotations:26.1.0'
 
   // Google Play Games, Auth
   implementation 'com.google.android.gms:play-services-games:15.0.1'
   implementation 'com.google.android.gms:play-services-auth:15.0.1'
   implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
 
   implementation 'com.linecorp:linesdk:5.3.0'
   implementation 'com.appsflyer:af-android-sdk:5.0.0'
   implementation 'com.android.installreferrer:installreferrer:1.0'
   implementation ('com.facebook.android:facebook-core:6.1.0') {
       exclude group: "com.android.installreferrer", module: 'installreferrer'
   }
   implementation 'com.facebook.android:facebook-common:6.1.0'
   implementation 'com.facebook.android:facebook-login:6.1.0'
   implementation 'com.facebook.android:facebook-share:6.1.0'
}


Gradle을 Bash-Shell에서 커맨드 라인으로 실행하는 방법입니다.
> ./gradlew build
>$ ./gradlew build


HIVE SDK Sample에 포함하여 배포되는 Podfile의 예시입니다.
source 'https://github.com/CocoaPods/Specs.git'
platform :ios, '10.0'
use_frameworks! :linkage => :static
inhibit_all_warnings!
 
workspace 'HIVE_GAME'
project 'ProjectPath/Project/HIVE_GAME.xcodeproj'
 
def analytics_libs
 pod 'Adjust', '~> 4.20'
 pod 'AppsFlyerFramework', '~> 5.0'
# pod 'Singular-SDK', '~> 9.2'
end
def auth_libs
 pod 'LineSDKSwift', '~> 5.4.0'
# pod 'QQ_OpenSDK', '~> 3.3.3'
# pod 'TwitterKit5', '~> 5.1'
# pod 'VK-ios-sdk', '~> 1.5.1'
# pod 'WechatOpenSDK', '~> 1.8.6'
end
def common_libs
 pod 'FBSDKCoreKit', '~> 5.6'
 pod 'FBSDKLoginKit', '~> 5.6'
 pod 'FBSDKShareKit', '~> 5.6'
 pod 'GoogleSignIn', '~> 5.0'
end
 
target 'HIVE_GAME_COOL' do
 project 'ProjectPath/Project/HIVE_GAME.xcodeproj'
 common_libs
 auth_libs
 analytics_libs
end




CocoaPods을 Bash-Shell에서 커맨드 라인으로 설치하는 방법입니다.
> [sudo] gem install cocoapods
>$ gem install cocoapods
Successfully installed cocoapods-1.9.1
Parsing documentation for cocoapods-1.9.1
Done installing documentation for cocoapods after 3 seconds
1 gem installed






CocoaPods의 설정을 Bash-Shell에서 커맨드 라인으로 실행하는 방법입니다.
> pod install
>$ pod install
Analyzing dependencies
Downloading dependencies
Generating Pods project
Integrating client projects
Pod installation complete! There are 10 dependencies from the Podfile and 27 total pods installed.



Gradle 파일을 편집하는 경우 Gradle.org 및 Android Developers에서 확인이 가능하며, podfile 파일을 편집하는 경우 CocoaPods.org에서 확인이 가능합니다.
Gradle
Unity 환경에서 EDM4U를 처음 사용하는 PC에서 구글라이센스에 대한 동의를 요구하는 경우가 있습니다. 빌드PC혹은 젠킨스 환경에서 Google 라이센스에 대한 동의를 수행해야하므로 해당 환경에서 1회 이상 확인해야 합니다.
HIVE 혹은 외부 라이브러리에서 Android-X라이브러리와 함께 구 Android Support 라이브러리를 사용하는 경우 Jetpack라이브러리가 필요합니다. 해당 기능을 활성화하면 Android-X와 Android Support 라이브러리의 호환성 문제를 해결합니다.

Kotlin 라이브러리가 포함되어진 경우 JDK1.8 이상을 필요로 합니다. 해당 설정이 필요한 HIVE SDK를 사용하는 경우 HIVE SDK Unity 패키지 설치시 빌드시점에 자동으로 추가됩니다.


CocoaPods
CocoaPods을 통해 배포되는 라이브러리 특이사항
동적 라이브러리 형태로 제공되는 경우가 있습니다.
Bitcode를 지원하지 않는 라이브러리를 포함하면 최종 빌드 산출물도 Bitcode를 지원할 수 없습니다.
CocoaPods적용시 주의사항
XCconfig 파일을 사용하여 프로젝트 설정을 구성하는 경우
CocoaPods의 라이브러리 연결방법은 빌드타겟의 xcconfig 파일을 설정하여 지정하는 것으로, 해당 타겟에 이미 지정된 xcconfig파일이 있는 경우 경고메시지를 노출합니다.
[!] CocoaPods did not set the base configuration of your project because your project already has a custom config set. In order for CocoaPods integration to work at all, please either set the base configurations of the target `HIVE_SDK` to `Target Support Files/Pods-HIVE_SDK/Pods-HIVE_SDK.debug.xcconfig` or include the `Target Support Files/Pods-HIVE_SDK/Pods-HIVE_SDK.debug.xcconfig` in your build configuration

해당 경고메시지가 노출되었다면, 기존의 지정된 xcconfig 파일에 CocoaPods이 해당 타겟을 위해 제공되는 xcconfig 파일을 포함하도록 하는 것으로 해소할 수 있습니다.
#include "Shared/Platform/iOS.xcconfig"
#include "Shared/Target/Application.xcconfig"
#include "Shared/Version.xcconfig"
 
PRODUCT_NAME = HIVE_SDK_Sample
PRODUCT_BUNDLE_IDENTIFIER = com.com2us.hivesdk.normal.freefull.apple.global.ios.universal
CURRENT_PROJECT_VERSION = $(HIVE_SDK_PROJECT_VERSION)
INFOPLIST_FILE = $(SRCROOT)/Sources/Info.plist
DEVELOPMENT_TEAM = MMVTCXSS58
CODE_SIGN_STYLE = Automatic
APP_FACEBOOK_ID = 1809615065921877
CODE_SIGN_ENTITLEMENTS = Configurations/Hive_v2_SDK_sample.entitlements
 
#include "../../Pods/Target Support Files/Pods-HIVE_SDK_Sample/Pods-HIVE_SDK_Sample.release.xcconfig"


Sample.xcconfig
