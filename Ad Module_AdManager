HIVE SDK v4.14.4와 v1.18.3부터 종속성있는 외부라이브러리를 포함해 배포합니다. 개발 환경이 Android이면 Gradle, iOS면 CocoaPods를 이용해 필요한 라이브러리를 설치하도록 안내합니다. Gradle과 CocoaPods에서 최신 버전을 이용할 수 없거나 별개로 관리해야 하는 라이브러리일 경우에는 SDK에 포함해 배포합니다. 본 페이지와 HIVE SDK에서 제공하는 라이브러리를 제외한 외부 플러그인이나 다른 라이브러리를 사용할 경우 버전 충돌이 발생해 정상적으로 빌드하지 못할 수 있으니 유의하세요.

## AD(X) 배포 버전과의 차이

<h4 id="difference">AD(X) 배포 버전과의 비교</h4>


<pre>
<androidPackages>
  <androidPackage spec="com.appsflyer:af-android-sdk:5.0.0"/>
  <androidPackage spec="com.linecorp:linesdk:5.3.0"/>
</androidPacakges>
<iosPods>
  <!-- <iosPod name="Google-Mobile-Ads-SDK" version="~> 7.0" bitcodeEnabled="true" minTargetSdk="9.0" /> -->
  <iosPod name="FBSDKCoreKit" version="~> 5.6" bitcodeEnabled="true" minTargetSdk="9.0" />
  <iosPod name="FBSDKLoginKit" version="~> 5.6" bitcodeEnabled="true" minTargetSdk="9.0" />
  <iosPod name="FBSDKShareKit" version="~> 5.6" bitcodeEnabled="true" minTargetSdk="9.0" />
  <iosPod name="GoogleSignIn" version="~> 4.4.0" bitcodeEnabled="true" minTargetSdk="9.0" />
  <iosPod name="LineSDKSwift" version="~> 5.4.0" bitcodeEnabled="true" minTargetSdk="10.0" /><!-- LINE -->
  <!-- <iosPod name="TwitterKit" version="~> 3.4.0" bitcodeEnabled="true" minTargetSdk="10.0" /> --><!-- Twitter -->
  <!-- <iosPod name="VK-ios-sdk" version="~> 1.5.1" bitcodeEnabled="true" minTargetSdk="9.0" /> --><!-- VK -->
  <!-- <iosPod name="QQ_OpenSDK" version="~> 3.3.3" bitcodeEnabled="true" minTargetSdk="9.0" /> --><!-- QQ -->
  <!-- <iosPod name="WechatOpenSDK" version="~> 1.8.6" bitcodeEnabled="true" minTargetSdk="9.0" /> --><!-- WechatOpenSDK -->
  <iosPod name="Adjust" version="~> 4.20.0" bitcodeEnabled="true" minTargetSdk="9.0" /><!-- Adjust -->
  <!-- <iosPod name="Singular-SDK" version="~> 9.2.1" bitcodeEnabled="true" minTargetSdk="9.0" /> --><!-- Singular -->
  <iosPod name="AppsFlyerFramework" version="~> 5.0" bitcodeEnabled="true" minTargetSdk="9.0" /><!-- AppsFlyer -->
</iosPods>
</pre>

EDM4U가 동작할 수 있는 빌드 환경이 마련되지 않았다면 이를 구축해야 합니다. EDM4U에서 제공하는 GUI를 이용하거나 Unix 셸인 Bash, 다시 말해 명령줄 인터페이스(CLI, Command Line Interface)를 통해서도 가능합니다. 

이미지

이미지

이미지



Android SDK와 Android Studio를 설치했다면 Gradle 관련 별도 설정이 필요하지 않습니다. 설치하지 않았다면 아래 바로가기를 클릭하세요.
[Android Developers 바로가기](https://developer.android.com/studio)

Bash에서 명령줄로 CocoaPods을 설치할 수 있습니다. 

**설치**
<pre>
> [sudo] gem install cocoapods
>$ gem install cocoapods
Successfully installed cocoapods-1.9.1
Parsing documentation for cocoapods-1.9.1
Done installing documentation for cocoapods after 3 seconds
1 gem installed
</pre>

CocoaPods으로 iOS에서 사용하는 외부 라이브러리를 제공받을 경우 기존 .xcodeproj 파일의 확장자를 .xcworkspace로 변경해 제공합니다. .xcworkspace 형태로 빌드를 진행할 수 없다면 GUI를 이용해 설정을 변경해보세요. 빌드할 PC의 Unity에서 수행하는 CocoaPods 적용 방식이 변경되어 실행할 수 있습니다. 

이미지

이미지

&nbsp;

## 제공하는 기능
AD(X)에서 제공하는 광고모듈은 AdMob/MoPub SDK를 활용해 구현되어 있습니다. 다시 말해, AD(X)에서 제공하는 별도 인터페이스를 제외한 광고 구현과 시청은 AdMob/MoPub SDK를 이용해 구현할 수 있습니다.  

<h4 id="adx">AD(X)</h4>

**Rewarded Video**: [https://github.com/adxcorp/ADXLibrary_Integration/wiki/ADXUnity#rewarded-video](https://github.com/adxcorp/ADXLibrary_Integration/wiki/ADXUnity#rewarded-video)

1. 리워드 비디오 초기화
<pre>
#if UNITY_ANDROID
string adUnitId = "<REWARDEDVIDEO_ADUNIT_ID>";
#elif UNITY_IPHONE
string adUnitId = "<REWARDEDVIDEO_ADUNIT_ID>";
#else
string adUnitId = "unexpected_platform";
#endif

rewardedAd = new RewardedAd(adUnitId);

rewardedAd.OnAdLoaded += HandleRewardedAdLoaded;
rewardedAd.OnAdFailedToLoad += HandleRewardedAdFailedToLoad;
rewardedAd.OnAdOpening += HandleRewardedAdOpening;
rewardedAd.OnAdFailedToShow += HandleRewardedAdFailedToShow;
rewardedAd.OnUserEarnedReward += HandleUserEarnedReward;
rewardedAd.OnAdClosed += HandleRewardedAdClosed;
</pre>

2. 리워드 비디오 로딩
<pre>
if (ADXGDPRManager.GetConsentState () == 2) {
     // Create an empty ad request.
     AdRequest request = new AdRequest.Builder ()
                                      .AddExtra ("npa", "1")
                                      .Build ();
     rewardedAd.LoadAd(request);
} else {
     // Create an empty ad request.
     AdRequest request = new AdRequest.Builder ()
                                      .Build ();
     rewardedAd.LoadAd(request);
}
</pre>

3. 리워드 비디오 재생
<pre>
if (rewardedAd.IsLoaded()) {
     rewardedAd.Show();
}
</pre>


<h4 id="admob">AdMob</h4>

**Rewarded Ads**: [https://developers.google.com/admob/unity/rewarded-ads?hl=ko](https://developers.google.com/admob/unity/rewarded-ads?hl=ko)

1. 리워드 비디오 초기화 및 로딩

<pre>

</pre>

2. 리워드 비디오 재생

<pre>
if (this.rewardedAd.IsLoaded()) {
     this.rewardedAd.Show();
}
</pre>

<h4 id="admanager">HIVE AdManager</h4>


&nbsp;


## HIVE SDK 구버전 적용하기

iOS용 HIVE SDK에는 Facebook SDK를 포함해 배포하고 있어 버전 차이로 충돌이 발생할 수 있습니다. 이를 방지하려면 HIVE SDK에 포함된 Facebook SDK 구성요소를 제거하고 CocoaPods으로 설치할 수 있도록 변경해야 합니다. HIVE SDK 버전에 따라 호환 가능한 Facebook SDK 버전이 다르니 현재 적용한 HIVE SDK의 서드파티 라이브러리 목록에서 버전을 확인해보세요. 아래는 HIVE SDK v4.11.x에 사용하는 Facebook SDK를 설정한다고 가정한 내용입니다. ADXDependencies.xml 파일에 아래 내용을 추가하세요. 

<pre>
  <iosPod name="FBSDKCoreKit" version="~> 5.6" bitcodeEnabled="true" minTargetSdk="9.0" />
  <iosPod name="FBSDKLoginKit" version="~> 5.6" bitcodeEnabled="true" minTargetSdk="9.0" />
  <iosPod name="FBSDKShareKit" version="~> 5.6" bitcodeEnabled="true" minTargetSdk="9.0" />
</pre>
